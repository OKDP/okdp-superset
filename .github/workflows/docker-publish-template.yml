#
# Copyright 2024 okdp.io
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: publish docker image into registry 

on:
  workflow_call:
    inputs:
      context:
        description: Docker context
        required: false
        type: string
        default: '.'
      dockerfile:
        description: Dockerfile name
        required: false
        type: string
        default: 'Dockerfile'
      image:
        description: Image name
        required: false
        type: string
        default: 'superset'
      registry:
        description: Github released tag name
        required: false
        type: string
        default: 'quay.io'
      add-tag-suffix:
        description: "Optional suffix to append to the Docker image tag (e.g. '-dockerize' or '-websocket'). Leave empty for no suffix."
        required: false
        type: string
        default: ""

defaults:
  run:
    shell: bash

jobs:

  latest-image-tag:
    runs-on: "ubuntu-latest"
    outputs:
      latest_tag: ${{ steps.latest-image-tag.outputs.latest_tag }}
      latest_git_tag: ${{ steps.latest-image-tag.outputs.latest_git_tag }}
    steps:
      - name: Checkout Repo ⚡️
        uses: actions/checkout@v4

      - name: Get latest GitHub Release tag name 📥
        id: latest-image-tag
        uses: okdp/gh-workflows/.github/actions/latest-image-tag@v1

  docker-image-publish:
    needs: [latest-image-tag]
    name: "Docker publish (${{ inputs.image }}:${{ needs.latest-image-tag.outputs.latest_tag }})"
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout release tag ${{ needs.latest-image-tag.outputs.latest_git_tag }} ⚡️
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.latest-image-tag.outputs.latest_git_tag }}

      ### Common steps between CI and Publish
      #  - name: Free up disk space 📦
      #    uses: okdp/gh-workflows/.github/actions/free-disk-space@v1

      - name: Set up QEMU and Docker Buildx 📦
        uses: okdp/gh-workflows/.github/actions/setup-buildx@v1

      - name: Set up container registry 📦
        id: registry
        run:  |
            echo "registry=${{ vars.REGISTRY || inputs.registry }}" >> $GITHUB_OUTPUT
            echo "registry_repo=${{ vars.REGISTRY || inputs.registry }}/${GITHUB_REPOSITORY_OWNER@L}" >> $GITHUB_OUTPUT

      ### Publish steps
      ### The publish and periodic rebuilds are based on the latest stable github release tag
      - name: Login into ${{ steps.registry.outputs.registry }} registry 🔐
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.registry.outputs.registry }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_ROBOT_TOKEN }}

      - name: Set image tags
        id: image-tags
        run: |
           IMAGE_TAG=$(echo "${{ needs.latest-image-tag.outputs.latest_tag }}" | awk -F- '{ print $1 }')
           if [ "$IMAGE_TAG" != "${{ needs.latest-image-tag.outputs.latest_tag }}" ]
           then
             IMAGE_TAGS="${{ steps.registry.outputs.registry_repo }}/${{ inputs.image }}:${IMAGE_TAG}${{ inputs.add-tag-suffix }},"
           fi

           IMAGE_TAGS+="${{ steps.registry.outputs.registry_repo }}/${{ inputs.image }}:${{ needs.latest-image-tag.outputs.latest_tag }}${{ inputs.add-tag-suffix }}"
           
           echo "tags=${IMAGE_TAGS}" >> $GITHUB_OUTPUT
           echo "Set image tags to: $IMAGE_TAGS"

      - name: Build and push to ${{ steps.registry.outputs.registry_repo }} repository 📤
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.image-tags.outputs.tags }}
          labels: |
            org.opencontainers.image.title="${{ inputs.image }}"
            org.opencontainers.image.version="${{ needs.latest-image-tag.outputs.latest_tag }}"
            org.opencontainers.image.description="${{ inputs.image }} image"
            org.opencontainers.image.source="https://github.com/${{ github.repository }}"
            org.opencontainers.image.licenses="Apache-2.0"

